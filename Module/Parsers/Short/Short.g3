grammar Short;

options 
{
    language=CSharp3;
    output=AST;
    TokenLabelType=CommonToken;
    ASTLabelType=AutomationTree;
}

tokens {FILE; SECTION;}

@lexer::header{using Automation.Core;}
@parser::header{using Automation.Core;}
@lexer::namespace{Automation.Parsers.ShortGrammar}
@parser::namespace{Automation.Parsers.ShortGrammar}

/*
 * User Rules
 */
public // Simple parser grammar

file: section+ EOF -> ^(FILE section+);

section
    : 'start' WORD* 'end' -> ^(SECTION WORD*);

WORD: 'a'..'z'+;


/*
 * Pre-defined Lexer Rules
 */

NEWLINE
    : '\r'? '\n' { $channel = Hidden; };

WS	: (' ' | '\t' | NEWLINE)+ { $channel = Hidden; };
